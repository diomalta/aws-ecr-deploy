#!/bin/sh

set -e

. "$(dirname "$0")/_utils.sh"

checkDependencies

# ###################################### #
# Check if environment variables are set #
# ###################################### #

if [ -z "${AWS_ACCESS_KEY_ID}" ]; then
  log_warning "AWS_ACCESS_KEY_ID is empty"
  exit 1
fi

if [ -z "${AWS_SECRET_ACCESS_KEY}" ]; then
  log_warning "AWS_SECRET_ACCESS_KEY is empty"
  exit 1
fi

if [ -z "${AWS_ECR_REGION}" ]; then
  log_warning "AWS_ECR_REGION is empty. Using default value: us-east-1"
  AWS_ECR_REGION="${AWS_ECR_REGION:-us-east-1}"
fi

if [ -z "${IMAGE_REPOSITORY_URL}" ]; then
  log_error "IMAGE_REPOSITORY_URL is required. Example: 123456789012.dkr.ecr.us-east-1.amazonaws.com/image"
  exit 1
fi

IMAGE_TAG="${IMAGE_TAG:-$(openssl rand -hex 3)}"
DOCKER_IMAGE=$IMAGE_REPOSITORY_URL:$IMAGE_TAG
PATH_DOCKERFILE="${PATH_DOCKERFILE:-/}"
AWS_ECR_CONTAINER_REGISTRY_URL=$(echo $IMAGE_REPOSITORY_URL | cut -d'/' -f1)

# ###################################### #
#               Docker steps             #
# ###################################### #

log_info "Login to AWS ECR"
if ! aws ecr get-login-password --region $AWS_ECR_REGION \
  | docker login --username AWS --password-stdin $AWS_ECR_CONTAINER_REGISTRY_URL
then
  throw "Error on login to AWS ECR"
fi

log_info "Building docker image"
if ! docker build --pull -t $DOCKER_IMAGE .${PATH_DOCKERFILE} 
then
  throw "Error on build docker image"
fi

log_info "Pushing docker image"
if ! docker push $DOCKER_IMAGE
then
  throw "Error on push docker image"
fi

log_success "Docker image pushed"
echo $DOCKER_IMAGE
